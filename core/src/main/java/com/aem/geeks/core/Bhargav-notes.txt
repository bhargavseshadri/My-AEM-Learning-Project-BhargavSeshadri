1) Resource Resolver related Notes is in
- Main: com/aem/geeks/core/utils/ResolverUtil.java
- Eg: com/aem/geeks/core/services/impl/ComponentsInfoServiceImpl.java

=============================================================================================
2) FETCHING DATA FROM EXTERNAL API (using sling model)
- Main:
STEP:1(just Interface) : com/aem/geeks/core/models/ExternalAPIDemoModel.java
STEP:2(sling model implimentation) : FETCHING DATA: com/aem/geeks/core/models/impl/ExternalAPIDemoModel.java
STEP:3 : RENDERING THE DATA ON FRONTEND: apps/aemgeeks/components/helloworld/helloworld.html

=============================================================================================
3) SERVLET

a) ResourceType Servlet:
-> GET : (only step) : com/aem/geeks/core/servlets/BhargavResourceTypeGETServlet.java
























=============================================================================================
3) HTL
a)data-sly-list:  LOOPING
-> apps/aemgeeks/components/content/author-books/author-books.html
-> Its model is in : com/aem/geeks/core/models/impl/AuthorBooksImpl.java

b)data-sly-repeat: everything is exactly similar to data-sly-list but only difference is in page html structure list-have only one parent container and inside it it have <p> tags,
but Repeat creates div containers for every iteration

-> data-sly-list with ITERATOR :
eg scenario: want to iterate the child pages of a purticular page and then display that info to htl
- so in our sling model we gonna get all the child pages using "Iterator<Page> pages=page.listChildren();" and then we get the iterator.
- Now we gonna use this data-sly-list in the htl
- STEP:1 -> com/aem/geeks/core/services/impl/DemoServiceAImpl.java  (here we get the list of page objs and puts them in iterator)
- STEP:2 -> apps/aemgeeks/components/content/servicedemo/servicedemo.html (here we use data-sly-list)

-> Note: approach without using iterator is at (Useful to understand the use of ARRAYLIST, ITERATOR)
step:1 -> com/aem/geeks/core/services/impl/DemoServiceBImpl.java
step:2 -> apps/aemgeeks/components/content/servicedemo/servicedemo.html

--------------------
-> We use the below three combined
c)data-sly-template(STEP: 1): for creating template (to reuse the code) :FILE: apps/aemgeeks/components/structure/home/head.html
d)data-sly-use (STEP: 2): here we use this to get that file where the template is defined. :File: apps/aemgeeks/components/structure/home/home.html
e)data-sly-call(STEP: 3) : use to call the specific template written in that file  :File: apps/aemgeeks/components/structure/home/home.html

--------------------
f)data-sly-attribute : used to give attributes like class,id in html structure

--------------------
g)data-sly-include : used to include files, if we want to include any file like html,jsp we use this.
-> Example and notes for this is at : apps/aemgeeks/components/content/author-books/author-books.html
-> Note: If the path you include is not a valid one, then in that case it won't render anything.
-> Note: the file code will completely replace the code or div tag or markup in the main file.

--------------------
h)data-sly-resource : used to include resources.
-> Example and notes for this is at : apps/aemgeeks/components/content/author-books/author-books.html
-> Whatever the OUTPUT of the resource will be available in the place where we added this.
-> Note: The OUTPUT of the resource we have given will be displayed to the user

--------------------
i)data-sly-set : setting a variable in HTL, If you want a variable that should be available through out the HTL file then we use this

=================================
=> USING GLOBAL OBJECTS
> Enumerable Objects
1) properties - apps/aemgeeks/components/content/author-books/author-books.html
2) pageProperties - apps/aemgeeks/components/content/author-books/author-books.html
3) inheritedPageProperties - apps/aemgeeks/components/content/author-books/author-books.html

> Java-Backed-Object
4) Component : apps/aemgeeks/components/content/author-books/author-books.html
5) componentContext : apps/aemgeeks/components/content/author-books/author-books.html
6) resource : apps/aemgeeks/components/content/author-books/author-books.html
7) resourcePage : apps/aemgeeks/components/content/author-books/author-books.html
8) currentDesign : apps/aemgeeks/components/content/author-books/author-books.html
9) currentNode : apps/aemgeeks/components/content/author-books/author-books.html
10) currentPage : apps/aemgeeks/components/content/author-books/author-books.html
11) resourceDesign : apps/aemgeeks/components/content/author-books/author-books.html
12) wcmmode : apps/aemgeeks/components/content/author-books/author-books.html